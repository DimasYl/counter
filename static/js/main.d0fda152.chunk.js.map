{"version":3,"sources":["Counter.module.css","CounterSettings.module.css","Counter.tsx","CounterSettings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","className","style","counter","pole","min","max","err","remember","value","message","table","onClick","inc","disabled","dec","reset","CounterSettings","setMax","setMin","setValue","setRemember","onClickInputValue","settings","type","redError","onChange","e","currentTarget","set","App","useState","minValue","setMinValue","maxValue","setMaxValue","useEffect","valueAsString","localStorage","getItem","newValue","JSON","parse","setItem","stringify","maxValueAsString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0fda152.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1jrZn\",\"pole\":\"Counter_pole__1CzIZ\",\"table\":\"Counter_table__U1oi2\",\"err\":\"Counter_err__3Qblt\",\"message\":\"Counter_message__1vDq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"CounterSettings_settings__2dvV5\",\"pole\":\"CounterSettings_pole__1jmFb\",\"set\":\"CounterSettings_set__S8Mjl\",\"redError\":\"CounterSettings_redError__2TZvI\"};","import React from \"react\";\r\nimport './App.css'\r\nimport style from './Counter.module.css'\r\n\r\ntype CounterPropsType = {\r\n    value: number\r\n    inc: () => void\r\n    dec: () => void\r\n    reset: () => void\r\n    min: number\r\n    max: number\r\n    remember: boolean\r\n}\r\n\r\nexport const Counter: React.FC<CounterPropsType> = (props) => {\r\n\r\n    function entryField() {\r\n        if (props.min < 0 || props.max <= props.min ){\r\n            return <div className={style.err}> Incorrect value </div>\r\n        } else if(!props.remember){\r\n            return <div className={style.message}>Enter value and press 'set'</div>\r\n        }else {\r\n\r\n            return  <div className={props.value === props.max ? 'red' : 'number'}>{props.value}</div>\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.counter}>\r\n            <div className={style.pole}>\r\n                {/*{ props.min >= 0 && props.max > props.min*/}\r\n                {/*    ? <div className={props.value === props.max ? 'red' : 'number'}>{props.value}</div>*/}\r\n                {/*    : <div className={style.err}> Incorrect value </div>*/}\r\n                {/*}*/}\r\n                {entryField()}\r\n            </div>\r\n            {props.min >= 0 && props.min < props.max\r\n                ? <div className={style.table}>\r\n\r\n                    <button onClick={props.inc} disabled={props.value === props.max}>inc</button>\r\n                    <button onClick={props.dec} disabled={props.value === props.min}>dec</button>\r\n                    <button onClick={props.reset}  disabled={props.value === props.min}>reset</button>\r\n                </div>\r\n                : <div className={style.table}>\r\n                    <button onClick={props.inc} disabled>inc</button>\r\n                    <button onClick={props.dec} disabled>dec</button>\r\n                    <button onClick={props.reset} disabled>reset</button>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, Dispatch, SetStateAction} from \"react\";\r\nimport './App.css'\r\nimport style from './CounterSettings.module.css'\r\n\r\ntype CounterSettingsPropsType = {\r\n    min: number\r\n    max: number\r\n    setMax: (max: number) => void\r\n    setMin: Dispatch<SetStateAction<number>>\r\n    setValue: Dispatch<SetStateAction<number>>\r\n    remember: boolean\r\n    setRemember: (remember: boolean) => void\r\n}\r\n\r\nexport const CounterSettings:\r\n    React.FC<CounterSettingsPropsType> = ({max, min, setMax, setMin, setValue, remember,setRemember}) => {\r\n\r\n    const onChangeMaxValue = (e:  ChangeEvent<HTMLInputElement>) => {\r\n        setMax(+e.currentTarget.value)\r\n    }\r\n    const onChangeMinValue = (e:  ChangeEvent<HTMLInputElement>) => {\r\n        setMin(+e.currentTarget.value)\r\n\r\n    }\r\n    const onSet = () => {\r\n        setMin(min)\r\n        setMax(max)\r\n        setValue(min)\r\n        setRemember(!remember)\r\n    }\r\n    const onClickInputValue = () => {\r\n        setRemember(false)\r\n    }\r\n    return (\r\n        <div className={style.settings}>\r\n            <div className={style.pole}>\r\n                <p>Min value - <input type='number' onClick={onClickInputValue} className={min < 0 || min >= max ? style.redError : ''}  value={min} onChange={onChangeMinValue}/></p>\r\n                <p>Max value - <input type='number' onClick={onClickInputValue} className={min >= max ? style.redError : ''} value={max} onChange={onChangeMaxValue}/></p>\r\n            </div>\r\n            <div className={style.set}>\r\n                <button disabled={min < 0 || min >= max || remember} onClick={onSet}>SET</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CounterSettings;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Counter} from \"./Counter\";\nimport CounterSettings from \"./CounterSettings\";\n\nfunction App() {\n    const [minValue, setMinValue] = useState(0)\n    const [maxValue, setMaxValue] = useState(10)\n    const [value, setValue] = useState(minValue)\n    const [remember, setRemember] = useState(false)\n\n\n    const increment = () => {\n        setValue(value + 1)\n    }\n    const decrement = () => {\n        setValue(value - 1)\n    }\n    const reset = () => {\n        setValue(minValue)\n    }\n\n    useEffect(() => {\n        let valueAsString = localStorage.getItem(\"minValue\")\n        if (valueAsString) {\n            let newValue = JSON.parse(valueAsString)\n            setMinValue(newValue)\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"minValue\", JSON.stringify(minValue))\n    }, [minValue])\n    useEffect(() => {\n        let maxValueAsString = localStorage.getItem('maxValue')\n        if (maxValueAsString) {\n            let newValue = JSON.parse(maxValueAsString)\n            setMaxValue(newValue)\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem('maxValue', JSON.stringify(maxValue))\n    }, [maxValue])\n\n\n    return (\n        <div className='container'>\n            <CounterSettings\n                max={maxValue}\n                min={minValue}\n                setMin={setMinValue}\n                setMax={setMaxValue}\n                setValue={setValue}\n                remember={remember}\n                setRemember={setRemember}\n            />\n            <Counter value={value}\n                     inc={increment}\n                     dec={decrement}\n                     reset={reset}\n                     min={minValue}\n                     max={maxValue}\n                     remember={remember}\n            />\n\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}